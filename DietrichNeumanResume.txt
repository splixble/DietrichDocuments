Dietrich Neuman
2950 Southeast Yamhill Street
Portland, Oregon 97214
Phone: (206) 930-7266
Email: DietrichNeuman@gmail.com
linkedin.com/in/dietrich-neuman-030806132/

PROFESSIONAL SUMMARY 
Software engineer with decades of experience developing Windows applications at stages of the software life cycle, with expertise in:
•	UI design and implementation, in C# .NET, C++, VB, JavaScript, and other languages
•	Database administration and design, in SQL Server, Access, and other SQL platforms
•	Documentation, configuration management, and testing
Whether working from a formal specification or an ad-hoc user request, I excel at making software easier and more powerful for the user.
PROFESSIONAL EXPERIENCE 
Senior Consultant (software engineer)	July 2021 – February 2024
CGI 	Fairfax, Virginia (remote from Portland) 
Designed and implemented Winforms C# .NET/ SQL Server applications, incorporating reusable code libraries I had written at my previous position at Nexelis.
Reconfigured in-house applications and software libraries I had written at Nexelis, replacing their database back-end (Advanced Revelation) with SQL Server, and adapting them to a new laboratory and IT environment. 
Migrated data, software, and processes from a clinical laboratory under decommissioning to a new laboratory and IT environment, while working on the initial setup of the new environment. 
Customized a STARLIMS installation at a pharmaceutical manufacturing company, modifying server scripts in STARLIMS Scripting Language and client scripts in JavaScript to solve usability problems.
Completed and upgraded an Access database application for a biotech company, migrating its back-end tables from Access to SharePoint lists.
Developed a demo web application in ASP.NET Core, with a SQL Server Azure back end, for a client proposal.
Senior Software Engineer	September 2005 – July 2021
Nexelis, a Q² Solutions Company	Seattle, Washington 
Created the company’s first formal in-house software development environment, by acquiring and configuring Visual Studio, SQL Server, and Perforce.
Designed and implemented a suite of Winforms C# .NET/SQL Server in-house applications, to augment and/or replace functions in the company’s legacy system. These included the following:
•	Clinical data reports, which presented, in a few seconds, the same data that had taken the legacy system 20 minutes or more to extract.
•	A freezer inventory tracking system, which replaced a cumbersome and error-prone spreadsheet-based system with an interface with graphical representations of freezers and their contents, where sample and box movements are recorded by drag-and-drop operations.
•	Project management and financial projection tools, which generated Crystal Reports.
•	A monitor of usage of these applications by users, which aided admins in troubleshooting performance issues.
Developed reusable code libraries for these applications, which provided the following common features:
•	Multi-level data security based on Windows Login credentials
•	Paginated, optimized images of forms and DataGridView objects for printing
•	Audit logging at either the client or server (SQL Server) side
Designed, implemented, and administered SQL Server databases for the in-house applications, adding C# assemblies, triggers, and other advanced features. 
Created a Mirror Database, to maintain a real time copy of the data in the company’s Revelation Software laboratory information system (LIS), generating TSQL scripts that convert the table records from Revelation format to SQL Server.
Wrote JavaScript code to generate dynamic HTML for the company’s website.
Created a utility in Visual Basic Script 6.0 to generate and print bar-code labels from data read from text files. 
Maintained Java and Objective C code of a smartphone application for both the Android and iPhone platforms.
Authored validation documentation for a laboratory information system, and for several laboratory instrument data interfaces.
Programmer-Writer	June 2005 – August 2005
Microsoft (contracted through Sakson & Taylor)	Redmond, Washington
Wrote and edited Microsoft ADO.NET documentation, which is published in application help files and MSDN. Maintained OLE DB and ODBC documentation. Resolved documentation issues by creating test applications and communicating with developers. 
Wrote and maintained sample applications used in published ADO.NET documentation, in C#, C++ .NET, and Visual Basic .NET, using SQL Server 2005.  
Software Development Engineer in Test	February 2004 – February 2005
Microsoft (contracted through Excell Data)	Redmond, Washington
Designed and wrote a QA tool to visually represent trends in automated test results, first as a Perl script to generate HTML/JavaScript web pages, then as a C# .NET application. Using the tool, uncovered many previously unnoticed problems in both software and testing platforms. 
Developed other QA tools as well in C#, Perl, and NT Batch script, resulting in considerable streamlining of the test failure analysis process. 
Monitored automated test runs of Phoenix, a platform for compiler design and analysis. Reproduced, simplified, and diagnosed test failures, then wrote them up as bug reports. 
PREVIOUS EXPERIENCE 
Freelance software developer and consultant, Portland Oregon
Software Development Engineer, Professional Data Exchange, Inc. (ProDX), Portland, Oregon
E-Commerce Software Engineer, Harland Financial Solutions,	Portland, Oregon
Software Engineer, Mentor Graphics (contract through AZAD Technology Partners), Wilsonville, Oregon 
Software Engineer, USNR (contract through Aerotek), Woodland, Washington 
EDUCATION 
BS in Computer and Information Science, minors in Mathematics and English, University of Oregon
