@model IEnumerable<WebCoreSongs.Models.Viewsongperformances>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @*// from https://stackoverflow.com/questions/59601041/populate-dropdownlist-using-ef-core-from-another-model, 2nd suggestion: *@
    @Html.DropDownList("Venlist", ViewBag.VenuesList as SelectList,
            new { onchange = "document.location.href = '/Viewsongperformances/Index?venueID=' + this.options[this.selectedIndex].value;" })

    @* This also works, to call Javascript function directly:
    @Html.DropDownList("Venlist", new SelectList(ViewBag.VenuesList, "Id", "Name"), new { onChange = "Venlist_OnChange()" })
    *@
    @* TRY THESE IDEAS IN: https://stackoverflow.com/questions/25056508/onchange-event-for-html-dropdownlist *@

</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TitleAndArtist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PerformanceDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VenueName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TitleAndArtist)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PerformanceDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VenueName)
            </td>
        </tr>
}
    </tbody>
</table>


@section Scripts 
{
    <script type="text/javascript">
    function Venlist_OnChange()
    {
        // NOT USED as of 16Feb24
        var selectedVal = document.getElementById("Venlist").value;
        alert("Plabla! " + selectedVal);
        location.href = "/Viewsongperformances/Index?venueID=" + selectedVal;
    }
    </script>
}