@model PerformanceEditViewModel

@{
    PerformanceEditViewModel perfModel = (PerformanceEditViewModel)Model;
    string heading = "Performance...";

    ViewData["Title"] = heading;
}

<h1>@heading</h1>
<div class="row">
    <div class="col-md-4">
        <form asp-action="PerformanceEditSave">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="PerformanceDate" class="control-label"></label>
                <input asp-for="PerformanceDate" class="form-control" disabled="@(perfModel._CanEditSongPerformance)" />
                <span asp-validation-for="PerformanceDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Venue" class="control-label"></label>
                <select asp-for="Venue"
                        asp-items="@(new SelectList(perfModel._VenuesList, nameof(Venues.Id), nameof(Venues.Name)))"
                        disabled="@(perfModel._CanEditSongPerformance)" >
                    @*<option>Please select one</option>*@
                </select>
            </div>
            <div class="form-group">
                <label asp-for="Comment" class="control-label"></label>
                <input asp-for="Comment" class="form-control" disabled="@(perfModel._CanEditSongPerformance)" />
                <span asp-validation-for="Comment" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Series" class="control-label"></label>
                <input asp-for="Series" class="form-control" disabled="@(perfModel._CanEditSongPerformance)" />
                <span asp-validation-for="Series" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PerformanceType" class="control-label"></label>
                <input asp-for="PerformanceType" class="form-control" disabled="@(perfModel._CanEditSongPerformance)" />
                <span asp-validation-for="PerformanceType" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="DidIlead" disabled="@(perfModel._CanEditSongPerformance)" /> @Html.DisplayNameFor(model => model.DidIlead)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<p>
    @* was" "<a asp-action="CreatePerformance">Create New</a>
    // DIAG try 0 instead of -1 to indicate null value
    *@
    <a href="/DBPage/PerformanceEdit/@perfModel.Id/true/0">Add Song</a> 
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                Song
            </th>
            <th>
                Comment
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in perfModel._SongPerfList)
        {
            <tr>
                @if (item.Id == perfModel._SelectedSongPerfID)
                {
                    <form asp-action="PerformanceEditSaveSong">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="SongPerf_Id" />
                        <input type="hidden" asp-for="Id" /> @*is this also needed so that it'll have perf ID?*@
                    <td>
                            <select asp-for="SongPerf_Song"
                            asp-items="@(new SelectList(perfModel._SongsList, nameof(Viewsongssinglefield.Id), nameof(Viewsongssinglefield.TitleAndArtist)))">
                                @*<option>Please select one</option>*@
                            </select>
                            @* was: <input asp-for="SongPerf_TitleAndArtist" class="form-control" disabled="@(item.SongPerfID != perfModel._SelectedSongPerfID)" 
                                or @Html.DisplayFor(modelItem => item.TitleAndArtist);
                                need: Disabled if 
                                DIAG probly want to construct SelectList in Controller?
                            /> *@
                        </td>
                        <td>
                            <input asp-for="SongPerf_Comment" class="form-control" disabled="@(!perfModel._CanEditSongPerformance)" />
                            @* DIAG should be:
                            @if (item.Id == perfModel._SelectedSongPerfID)
                                @Html.DisplayFor(modelItem => perfModel.SongPerf_Comment)
                            else
                                @Html.DisplayFor(modelItem => item.Comment)
                            *@
                        </td>
                        <td>
                            <input type="submit" value="Save Song" class="btn btn-primary" />
                        </td>
                    </form>
                }
                else
                {
                    <td>
                        @* Display looked-up version of field value:
                        was: Html.Raw(perfModel._SongRowsByID[item.Song].TitleAndArtist);
                        the following works, but it's dangerous, no? bad chars in HTML? but the helper funcs dont display anything! DIAG?? *@
                        @(perfModel._SongRowsByID[item.Song].TitleAndArtist)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comment)
                    </td>
                    <td>
                        @* no longer use this overcomplicated BS: <a asp-action="Edit" asp-route-id="@item.PerfID">Edit</a>*@ |
                        <a href="/DBPage/PerformanceEdit/@item.Performance/true/@item.Id">Edit</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

