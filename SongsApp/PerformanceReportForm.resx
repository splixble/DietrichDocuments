<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBgAAAEAGACICQAAFgAAACgAAAAgAAAAMAAAAAEAGAAAAAAAYAkAAAAAAAAAAAAAAAAAAAAA
        AADe3t7e3t7e3t7W1s7Gzr21xpy9xpzOzrXe597n5+fv7+/v9+/39/f39/f39/f39/f39/f3///3///3
        ///3///3///3///39/f39/f39/f39/f39/f39/f39/f39/fv7+/e3ufe3t61xpyQlFaUoEiYoD2YoD2Y
        oD2gsUK1vXPW3sbv7+fv9+/39/f39/f39/f////////////////////////////////39/f39/f39/f3
        9/f39/f39/f39/f39/fe3t61xnucrRitvSG1xjm9xkK1xjmttTGcrTGcrTmcrTm1vXPe587v7+/39/f3
        9/f///f////////////////////////////39/f///f39/f39/f39/f39/f39/f39/fGzpScrQictQil
        vRi9xkK9zkK9zkrGzkq9zkK1xjGltTGltTmltTnGzozn59739+/39/f3//f///f///////////////f3
        //f3//f39/f39/f39/f39/f39/f39/f39/ettUKcrQiltQiltRC1xjm9zkK9zkq9zkrGzkrG1kLG1kK1
        xjGltTGltTmtvUrO1qXv7+f39/f39/f39/f39/fv7+fe58bO1qXO1pzO1qXW3r3v7+fv9+/39+/39/f3
        9/ecrSGcrQiltRCUnDGttVK9y1K9zkq9xjG9zjG9zim9zim9zim1xjmtvTGltTmltTmttUq1xnPGzoy9
        zoy1vXO1vWutvVqtvVKtvVKttVKttUqtvVrW3rXv7+f39/f39/ecrSGcrQiltRCEhHNzc2NGSko5OTlz
        a2OclHutrXu1vXOUoEiQlFZKSmOQlFatvTGttTmttUKtvUq1xkqttUqUoEh/jFZ7hFKQlFaltUq9xkKt
        tUKtvWPn5+fv7+/39/eltTGcrQictQh7hFKEhFJSWjlCQkJzc3OUlIRjY2NaYFhCQkpra3NKUnMQEFIp
        MWtSVlZjY2NSWmMxMWMhIWMhIWMhIWMhIWMhIWshKWNCSmuUrVK9xnvv7+/v9+/39/etvVKUrQicrQil
        tQiltQitvRCtvRCcrSGUpTGUnDFCQhh7jEZ7hGNKSmsQEFoQEFoQEFoQEFoQGGMQEGMQEFoQGGMYGGMY
        GGMhIWshIWMpMWtSWmPe57X39/f39/f39/e9xoSUrQCcrQictQiltQilvQitvQitvRC1xhC1xhC1xhC1
        xhitxhgYGFoICFoICFoIEFoIEFoQEGMQEGMQEFoQEGMYGGM5Qlp7hGutrYzGzqXe58739/f39/f39/f3
        9/fO1r2UrQCcrQictQiltQiltQitvRCtvRCltRCtvRC1xhC9zhi1xhgYIVIICFIAAFIAAFoICFoICFoI
        CGMIEGMQEGNaYFjGzpTn5+f39+/39/f39/f39/f39/f39/f39/fe1t6crRiUrQictQiltQiltQilvRCc
        rSlSWmNSVlZ7hFJzezGImClzfzkAAFIAAFoAAFoAAFoAAFIACFIICFIQGGOUpTGltVrW3r3n597v7+fv
        7+/v9+/39/f39/f39/fe1t6ltUqUrQCcrQictQiltQiltQiltRhSVlZCUmNrc3tKTlJKTlJrc3MICFoI
        CFoAAGMAAFoAAFIAAFIQEFoYIWOcrSmUpTGcrSmcrTmttVK9xnvO1rXe5+fn5+/n5+fW1t69xoSUrQCc
        rQictQiltQiltQilvQhaYFhCUmNrc3tSWmNCSlJaY2MICFIICGMQEGMIEHMICGMYGFpKSmsQEGNaYFh7
        jEZ7lJSMpYSUpXOUrVKtvYzGzs7O1tbW1t7W1tbW1saUrQicrQictQictQiltQiltRB7jGNKWmtja3Na
        Y2tCQlJCSlIhKWMYGGMYGGMhIWMhIWMhKWNKUmMYGGNCQlpCQlpCSmNKWnNaa4xrhKV7lLWqt7Wqt7W9
        xs7W1t7e1t6ltUqUrQCcrQictQictQiltRCltSGDlDNzfzlaZURCQkpKTlIxMVohIWMhIWMhIWMhGGMx
        MWt7e4QhIWMxOVJKUms5PVI5PVI5Qlo5PVJCQlpKSmNjY3trc4TW1tbW1tbOzrWUrQiUrQicrQictQil
        tRCltQilvQilvRClvQilvRBaZUQYGFIhIWMhIWshIWMpKWsxMWtzc4QhIWMxNUoxOVIxOVJKUmMxOVJK
        Ums5PVJCSlpKSlpCQlrWztbW1tbW1ta1vXOUrQiUrQicrQictRCltRCltRCltQilvQilvQiDlDMYGFoY
        GFoYGFoYGFoYGGMYGGMYIWMhIWMhKVopMVo5QlpGSkoxNUoxOVIxNUpCSlpCQlpCQlrOztbWztbW1tbW
        1ta1vXOUrQicrQicrQictRCltRCltQiltQilvRClvRCUpRhaZURGSkopMVohIWMhIWMhGGMhIWMpMWNK
        TlKImCmtvRiUnDF7jGOUlJx7hIxjY3NCSlrOzs7OztbW1tbWztbe1t7OzrWgsUKcrQictRCctQictRCl
        tRCltQilvRCtvRCtvRCtvRCtvRCtvRiltRiltRiltRitvRCtvRitvRitvRiltSGEjFq9xr3e3t7n5+fe
        5+fGxs7Ozs7OztbWztbW1tbe1t7e3t7W1sbGzoy9xnO9xmO9xnPG1oTO1qXe58bn59be587W1qW9xkqt
        vRCtvRCtvRCtvRCtvRitvRitvRitvSGUpXPGzs7e3t7n5+fe3ufGxs7Ozs7Ozs7OztbWztbW1t7e1t7e
        3t7e3ufe3ufn3ufn5+fn5+fn5+/n5+/n5+/n5+/n5+/n5+/e3r21xkqlvRitvRitvRitvRitvRitvSHG
        zqXe3t7e3ufn5+fe3ufGxs7Ozs7Ozs7OztbOztbW1t7W1t7e1t7e3t7e3ufe3ufn3ufn5+fn5+fn5+/n
        5+/n5+/n5+/n5+/n5+/n5+/W3rW9xmOtvTGtvSGtvSGtvVre3t7e3ufn5+fe3ufe3t7Gxs7Gxs7Ozs7O
        zs7OztbOztbW1t7W1t7e1t7e3t7e3ufe3ufn3ufn5+fn5+fn5+fn5+fn5+fn5+/n5+/n5+fn5+/n5+fn
        5+fe3t7e3t7e3ufe3ufe3ufe3ufe3t7W3t4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>