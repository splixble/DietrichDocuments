<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="AlternateArtistsDataSet" targetNamespace="http://tempuri.org/AlternateArtistsDataSet.xsd" xmlns:mstns="http://tempuri.org/AlternateArtistsDataSet.xsd" xmlns="http://tempuri.org/AlternateArtistsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MainConnectionString" ConnectionStringObject="" IsAppSettingsProperty="True" Modifier="Assembly" Name="MainConnectionString (Settings)" PropertyReference="ApplicationSettings.Songs.Properties.Settings.GlobalReference.Default.MainConnectionString" Provider="System.Data.Odbc">
          </Connection>
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AlternateArtistsTableAdapter" GeneratorDataComponentClassName="AlternateArtistsTableAdapter" Name="AlternateArtists" UserDataComponentName="AlternateArtistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MainConnectionString (Settings)" DbObjectName="Songbook.dbo.AlternateArtists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="True" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="True" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>DELETE FROM [AlternateArtists] WHERE (([ID] = ?) AND ([SongID] = ?) AND ([ArtistID] = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ArtistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArtistID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>INSERT INTO [AlternateArtists] ([SongID], [ArtistID]) VALUES (?, ?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="ArtistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArtistID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="True">
                    <CommandText>SELECT     ID, SongID, ArtistID
FROM         AlternateArtists</CommandText>
                    <Parameters>
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="False">
                    <CommandText>UPDATE [AlternateArtists] SET [SongID] = ?, [ArtistID] = ? WHERE (([ID] = ?) AND ([SongID] = ?) AND ([ArtistID] = ?))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="ArtistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArtistID" SourceColumnNullMapping="False" SourceVersion="Current">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                      <Parameter AllowDbNull="False" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ArtistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ArtistID" SourceColumnNullMapping="False" SourceVersion="Original">
                      </Parameter>
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="ArtistID" DataSetColumn="ArtistID" />
            </Mappings>
            <Sources>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources>
        </Sources>
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="AlternateArtistsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="AlternateArtistsDataSet" msprop:Generator_DataSetName="AlternateArtistsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="AlternateArtists" msprop:Generator_UserTableName="AlternateArtists" msprop:Generator_RowDeletedName="AlternateArtistsRowDeleted" msprop:Generator_TableClassName="AlternateArtistsDataTable" msprop:Generator_RowChangedName="AlternateArtistsRowChanged" msprop:Generator_RowClassName="AlternateArtistsRow" msprop:Generator_RowChangingName="AlternateArtistsRowChanging" msprop:Generator_RowEvArgName="AlternateArtistsRowChangeEvent" msprop:Generator_RowEvHandlerName="AlternateArtistsRowChangeEventHandler" msprop:Generator_TablePropName="AlternateArtists" msprop:Generator_TableVarName="tableAlternateArtists" msprop:Generator_RowDeletingName="AlternateArtistsRowDeleting">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msprop:Generator_UserColumnName="ID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInTable="IDColumn" type="xs:int" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" type="xs:int" />
              <xs:element name="ArtistID" msprop:Generator_UserColumnName="ArtistID" msprop:Generator_ColumnPropNameInRow="ArtistID" msprop:Generator_ColumnVarNameInTable="columnArtistID" msprop:Generator_ColumnPropNameInTable="ArtistIDColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AlternateArtists" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>